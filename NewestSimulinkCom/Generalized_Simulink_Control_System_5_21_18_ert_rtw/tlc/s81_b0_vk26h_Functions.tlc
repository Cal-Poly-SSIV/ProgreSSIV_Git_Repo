%implements s81_b0_vk26h_Functions "C"

%function g5jonq3vd3_Fcn0(block) void
%assign fcnBuff = ""
%openfile fcnBuff
%assign cfgTxt = ""
%openfile cfgTxt
/* Start for MATLABSystem: '<S3>/SPI Register Write throttle_left_front' incorporates:
 *  MATLABSystem: '<S2>/SPI Register Write begin_data_collection'
 *  MATLABSystem: '<S2>/SPI Register Write dead_switch'
 *  MATLABSystem: '<S2>/SPI Register Write init_motor_controllers'
 *  MATLABSystem: '<S2>/SPI Register Write init_servo_radio'
 *  MATLABSystem: '<S2>/SPI Register Write print_imu ENSURING NO PRINTING OCCURS DURING DYNAMIC OP  UNLESS EXPLICITLY SET'
 *  MATLABSystem: '<S2>/SPI Register Write print_radio ENSURING NO PRINTING OCCURS DURING DYNAMIC OP  UNLESS EXPLICITLY SET'
 *  MATLABSystem: '<S2>/SPI Register Write print_registers ENSURING NO PRINTING OCCURS DURING DYNAMIC OP  UNLESS EXPLICITLY SET'
 *  MATLABSystem: '<S2>/SPI Register Write reset_imu'
 *  MATLABSystem: '<S3>/SPI Register Write servo_out '
 *  MATLABSystem: '<S3>/SPI Register Write throttle_left_rear'
 *  MATLABSystem: '<S3>/SPI Register Write throttle_right_front'
 *  MATLABSystem: '<S3>/SPI Register Write throttle_right_rear'
 */
obj->matlabCodegenIsDeleted = value;
%closefile cfgTxt
%<cfgTxt>
%closefile fcnBuff
%assign fcnProtoType = ""
%openfile fcnProtoType
static void g5jonq3vd3(\
%assign comma = ""
%<comma>nxh1cwezgh *obj\
%assign comma = ", "
%<comma>boolean_T value\
%assign comma = ", "
%closefile fcnProtoType
%<SLibCG_SetFcnProtoType(4, 0, fcnProtoType)>
%return fcnBuff
%endfunction

%function il050nit4f_Fcn1(block) void
%assign fcnBuff = ""
%openfile fcnBuff
%assign cfgTxt = ""
%openfile cfgTxt
uint32_T PinNameLoc;
uint32_T MOSIPinLoc;
uint32_T MISOPinLoc;
uint32_T SCKPinLoc;
/* Start for MATLABSystem: '<S3>/SPI Register Write throttle_left_front' incorporates:
 *  MATLABSystem: '<S2>/SPI Register Write begin_data_collection'
 *  MATLABSystem: '<S2>/SPI Register Write dead_switch'
 *  MATLABSystem: '<S2>/SPI Register Write init_motor_controllers'
 *  MATLABSystem: '<S2>/SPI Register Write init_servo_radio'
 *  MATLABSystem: '<S2>/SPI Register Write print_imu ENSURING NO PRINTING OCCURS DURING DYNAMIC OP  UNLESS EXPLICITLY SET'
 *  MATLABSystem: '<S2>/SPI Register Write print_radio ENSURING NO PRINTING OCCURS DURING DYNAMIC OP  UNLESS EXPLICITLY SET'
 *  MATLABSystem: '<S2>/SPI Register Write print_registers ENSURING NO PRINTING OCCURS DURING DYNAMIC OP  UNLESS EXPLICITLY SET'
 *  MATLABSystem: '<S2>/SPI Register Write reset_imu'
 *  MATLABSystem: '<S3>/SPI Register Write servo_out '
 *  MATLABSystem: '<S3>/SPI Register Write throttle_left_rear'
 *  MATLABSystem: '<S3>/SPI Register Write throttle_right_front'
 *  MATLABSystem: '<S3>/SPI Register Write throttle_right_rear'
 */
if ((obj->isInitialized == 1) && obj->isSetupComplete) {
    PinNameLoc = SPI0_CE1;
    MOSIPinLoc = MW_UNDEFINED_VALUE;
    MISOPinLoc = MW_UNDEFINED_VALUE;
    SCKPinLoc = MW_UNDEFINED_VALUE;
    MW_SPI_Close(obj->MW_SPI_HANDLE, MOSIPinLoc, MISOPinLoc, SCKPinLoc, PinNameLoc);
}
/* End of Start for MATLABSystem: '<S3>/SPI Register Write throttle_left_front' */
%closefile cfgTxt
%<cfgTxt>
%closefile fcnBuff
%assign fcnProtoType = ""
%openfile fcnProtoType
static void il050nit4f(\
%assign comma = ""
%<comma>const nxh1cwezgh *obj\
%assign comma = ", "
%closefile fcnProtoType
%<SLibCG_SetFcnProtoType(4, 1, fcnProtoType)>
%return fcnBuff
%endfunction

%function fxi4tyt0c4_Fcn2(block) void
%assign fcnBuff = ""
%openfile fcnBuff
%assign cfgTxt = ""
%openfile cfgTxt
%assign _modelSS = ""

%if SLibCG_FcnCallArgAccessed(4,2,0,0)
%<SLibCG_AccessArg(4 ,2, 0)>
%endif

/* Start for MATLABSystem: '<S3>/SPI Register Write throttle_left_front' incorporates:
 *  MATLABSystem: '<S2>/SPI Register Write begin_data_collection'
 *  MATLABSystem: '<S2>/SPI Register Write dead_switch'
 *  MATLABSystem: '<S2>/SPI Register Write init_motor_controllers'
 *  MATLABSystem: '<S2>/SPI Register Write init_servo_radio'
 *  MATLABSystem: '<S2>/SPI Register Write print_imu ENSURING NO PRINTING OCCURS DURING DYNAMIC OP  UNLESS EXPLICITLY SET'
 *  MATLABSystem: '<S2>/SPI Register Write print_radio ENSURING NO PRINTING OCCURS DURING DYNAMIC OP  UNLESS EXPLICITLY SET'
 *  MATLABSystem: '<S2>/SPI Register Write print_registers ENSURING NO PRINTING OCCURS DURING DYNAMIC OP  UNLESS EXPLICITLY SET'
 *  MATLABSystem: '<S2>/SPI Register Write reset_imu'
 *  MATLABSystem: '<S3>/SPI Register Write servo_out '
 *  MATLABSystem: '<S3>/SPI Register Write throttle_left_rear'
 *  MATLABSystem: '<S3>/SPI Register Write throttle_right_front'
 *  MATLABSystem: '<S3>/SPI Register Write throttle_right_rear'
 */
%<(SLibCGCallSubFcn("il050nit4f", ["obj"], 4, 2, 0))>;
%closefile cfgTxt
%<cfgTxt>
%closefile fcnBuff
%assign fcnProtoType = ""
%openfile fcnProtoType
static void fxi4tyt0c4(\
%assign comma = ""
%<comma>const nxh1cwezgh *obj\
%assign comma = ", "
%closefile fcnProtoType
%<SLibCG_SetFcnProtoType(4, 2, fcnProtoType)>
%return fcnBuff
%endfunction

%function dlvppzqqf1_Fcn3(block) void
%assign fcnBuff = ""
%openfile fcnBuff
%assign cfgTxt = ""
%openfile cfgTxt
%assign _modelSS = ""

%if SLibCG_FcnCallArgAccessed(4,3,1,0)
%<SLibCG_AccessArg(4 ,3, 0)>
%endif

%if SLibCG_FcnCallArgAccessed(4,3,0,0)
%<SLibCG_AccessArg(4 ,3, 0)>
%endif

/* Start for MATLABSystem: '<S3>/SPI Register Write throttle_left_front' incorporates:
 *  MATLABSystem: '<S2>/SPI Register Write begin_data_collection'
 *  MATLABSystem: '<S2>/SPI Register Write dead_switch'
 *  MATLABSystem: '<S2>/SPI Register Write init_motor_controllers'
 *  MATLABSystem: '<S2>/SPI Register Write init_servo_radio'
 *  MATLABSystem: '<S2>/SPI Register Write print_imu ENSURING NO PRINTING OCCURS DURING DYNAMIC OP  UNLESS EXPLICITLY SET'
 *  MATLABSystem: '<S2>/SPI Register Write print_radio ENSURING NO PRINTING OCCURS DURING DYNAMIC OP  UNLESS EXPLICITLY SET'
 *  MATLABSystem: '<S2>/SPI Register Write print_registers ENSURING NO PRINTING OCCURS DURING DYNAMIC OP  UNLESS EXPLICITLY SET'
 *  MATLABSystem: '<S2>/SPI Register Write reset_imu'
 *  MATLABSystem: '<S3>/SPI Register Write servo_out '
 *  MATLABSystem: '<S3>/SPI Register Write throttle_left_rear'
 *  MATLABSystem: '<S3>/SPI Register Write throttle_right_front'
 *  MATLABSystem: '<S3>/SPI Register Write throttle_right_rear'
 */
if (!obj->matlabCodegenIsDeleted) {
    %<(SLibCGCallSubFcn("g5jonq3vd3", ["obj", "true"], 4, 3, 0))>;
    %<(SLibCGCallSubFcn("fxi4tyt0c4", ["obj"], 4, 3, 1))>;
}
/* End of Start for MATLABSystem: '<S3>/SPI Register Write throttle_left_front' */
%closefile cfgTxt
%<cfgTxt>
%closefile fcnBuff
%assign fcnProtoType = ""
%openfile fcnProtoType
static void dlvppzqqf1(\
%assign comma = ""
%<comma>nxh1cwezgh *obj\
%assign comma = ", "
%closefile fcnProtoType
%<SLibCG_SetFcnProtoType(4, 3, fcnProtoType)>
%return fcnBuff
%endfunction

